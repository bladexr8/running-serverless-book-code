AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'app

  Sample SAM Template for app

  '
Globals:
  Function:
    Timeout: 3
Parameters:
  AppStage:
    Type: String
    Default: api
    Description: API Gateway Stage, used as a prefix for the endpoint URLs
    AllowedPattern: ^[A-Za-z]+$
    MaxLength: 10
    MinLength: 1
    ConstraintDescription: 1-10 Latin letters
  UploadLimitInMB:
    Type: Number
    Default: 5
    Description: Maximum upload size in megabytes
    MinValue: 1
    MaxValue: 100
  ContactEmailAddress:
    Type: String
    Description: Email address for operational notifications
    Default: ''
Conditions:
  ContactEmailSet:
    Fn::Not:
    - Fn::Equals:
      - ''
      - Ref: ContactEmailAddress
Resources:
  WebApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName:
        Ref: AppStage
  UploadS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: AES256
  ThumbnailsS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: AES256
  ShowFormFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://spm-sam-project-deployment/df345be7f28f642d7f20e73800276859
      Handler: show-form.lambdaHandler
      Runtime: nodejs12.x
      Events:
        ShowForm:
          Type: Api
          Properties:
            Path: /
            Method: get
            RestApiId:
              Ref: WebApi
      Environment:
        Variables:
          UPLOAD_S3_BUCKET:
            Ref: UploadS3Bucket
          UPLOAD_LIMIT_IN_MB:
            Ref: UploadLimitInMB
      Policies:
      - S3FullAccessPolicy:
          BucketName:
            Ref: UploadS3Bucket
  ConfirmUploadFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://spm-sam-project-deployment/3f70e2aaa695cbb0b08d99a78963aa15
      Handler: confirm-upload.lambdaHandler
      Runtime: nodejs12.x
      Events:
        ConfirmForm:
          Type: Api
          Properties:
            Path: /confirm
            Method: get
            RestApiId:
              Ref: WebApi
      Environment:
        Variables:
          UPLOAD_S3_BUCKET:
            Ref: ThumbnailsS3Bucket
      Policies:
      - S3ReadPolicy:
          BucketName:
            Ref: ThumbnailsS3Bucket
  ConvertFileFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://spm-sam-project-deployment/30d8beda465fd71306d69c77145f7ede
      Handler: index.handler
      Runtime: nodejs12.x
      Events:
        FileUploaded:
          Type: S3
          Properties:
            Bucket:
              Ref: UploadS3Bucket
            Events: s3:ObjectCreated:*
      Timeout: 600
      Environment:
        Variables:
          OUTPUT_BUCKET:
            Ref: ThumbnailsS3Bucket
      Policies:
      - S3FullAccessPolicy:
          BucketName:
            Ref: ThumbnailsS3Bucket
      DeadLetterQueue:
        Type: SNS
        TargetArn:
          Ref: NotifyAdmins
  ConvertFunctionCanReadUploads:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: ConvertFunctionCanReadUploads
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - s3:GetObject
          Resource:
          - Fn::Sub: ${UploadS3Bucket.Arn}/*
      Roles:
      - Ref: ConvertFileFunctionRole
  NotifyAdmins:
    Type: AWS::SNS::Topic
  AlarmNotifyOpsSubscription:
    Type: AWS::SNS::Subscription
    Condition: ContactEmailSet
    Properties:
      Endpoint:
        Ref: ContactEmailAddress
      Protocol: email
      TopicArn:
        Ref: NotifyAdmins
Outputs:
  UserFormApi:
    Description: API Gateway endpoint URL
    Value:
      Fn::Sub: https://${WebApi}.execute-api.${AWS::Region}.amazonaws.com/${AppStage}/
  ShowFormFunction:
    Description: Show Form Lambda Function ARN
    Value:
      Fn::GetAtt:
      - ShowFormFunction
      - Arn
  ShowFormFunctionIamRole:
    Description: Implicit IAM Role created for ShowForm function
    Value:
      Fn::GetAtt:
      - ShowFormFunctionRole
      - Arn
  ConfirmUploadFunction:
    Description: Confirm Upload Form Lambda Function ARN
    Value:
      Fn::GetAtt:
      - ConfirmUploadFunction
      - Arn
  ConfirmUploadFunctionIamRole:
    Description: Implicit IAM Role created for Cofirm Upload function
    Value:
      Fn::GetAtt:
      - ConfirmUploadFunctionRole
      - Arn
  uploadBucket:
    Description: S3 Bucket for uploaded files
    Value:
      Ref: UploadS3Bucket
  thumbnailsBucket:
    Description: S3 Bucket for thumbnails
    Value:
      Ref: ThumbnailsS3Bucket
